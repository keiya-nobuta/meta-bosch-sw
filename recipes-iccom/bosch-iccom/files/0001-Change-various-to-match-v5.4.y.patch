From fb51816361751c38725214ee97e101e5e5af679a Mon Sep 17 00:00:00 2001
From: Keiya Nobuta <h109084@gmail.com>
Date: Sun, 22 Aug 2021 22:33:28 +0900
Subject: [PATCH 1/3] Change various to match v5.4.y

Signed-off-by: Keiya Nobuta <h109084@gmail.com>
---
 src/iccom-example.c   |  4 ----
 src/iccom.c           |  6 +++---
 src/iccom_socket_if.c | 10 +++++-----
 3 files changed, 8 insertions(+), 12 deletions(-)

diff --git a/src/iccom-example.c b/src/iccom-example.c
index e362928..71dce32 100644
--- a/src/iccom-example.c
+++ b/src/iccom-example.c
@@ -81,10 +81,6 @@ static void iccom_example_protocol_native_transfer_configuration_hook(
 
         const int SPI_FULL_WORD_SIZE_BITS = 32;
 
-        // the whole transfer is done at one burst
-        // (with single CS assertion) along the communicatiion
-        // contract
-        dst->burst_size_bits = xfer->size_bytes * 8;
         if (xfer->size_bytes * 8 >= SPI_FULL_WORD_SIZE_BITS) {
                 dst->bits_per_word = SPI_FULL_WORD_SIZE_BITS;
         } else {
diff --git a/src/iccom.c b/src/iccom.c
index ca318ac..095d4d6 100644
--- a/src/iccom.c
+++ b/src/iccom.c
@@ -335,10 +335,10 @@
 
 #if ICCOM_VERBOSITY >= 2
 #define iccom_warning(fmt, ...)						\
-	pr_warning(ICCOM_LOG_PREFIX"%s: "fmt"\n", __func__		\
+	pr_warn(ICCOM_LOG_PREFIX"%s: "fmt"\n", __func__		\
 		   , ##__VA_ARGS__)
 #define iccom_warning_raw(fmt, ...)					\
-	pr_warning(ICCOM_LOG_PREFIX""fmt"\n", ##__VA_ARGS__)
+	pr_warn(ICCOM_LOG_PREFIX""fmt"\n", ##__VA_ARGS__)
 #else
 #define iccom_warning(fmt, ...)
 #define iccom_warning_raw(fmt, ...)
@@ -1277,7 +1277,7 @@ void iccom_dbg_printout_xfer(const struct full_duplex_xfer *const xfer)
 		return;
 	}
 	printk("Xfer ptr: %px\n", xfer);
-	printk("Xfer size: %u\n", xfer->size_bytes);
+	printk("Xfer size: %lu\n", xfer->size_bytes);
 	if (IS_ERR(xfer->data_tx)) {
 		printk("Xfer TX data ptr: BROKEN: %px\n", xfer->data_tx);
 	} else if (xfer->data_tx) {
diff --git a/src/iccom_socket_if.c b/src/iccom_socket_if.c
index b701a72..6176ddb 100644
--- a/src/iccom_socket_if.c
+++ b/src/iccom_socket_if.c
@@ -84,7 +84,7 @@
 
 // The maximum client message size (client data size in bytes per message)
 #define ICCOM_SOCKET_MAX_MESSAGE_SIZE_BYTES 4096
-#define NETLINK_ICCOM 22
+#define NETLINK_ICCOM 23
 
 #define ICCOM_SOCKETS_CLOSE_POLL_PERIOD_JIFFIES msecs_to_jiffies(200)
 
@@ -108,7 +108,7 @@
         pr_err(ICCOM_SOCKETS_LOG_PREFIX"%s: "fmt"\n", __func__           \
                , ##__VA_ARGS__)
 #define iccom_socket_warning(fmt, ...)                                   \
-        pr_warning(ICCOM_SOCKETS_LOG_PREFIX"%s: "fmt"\n", __func__       \
+        pr_warn(ICCOM_SOCKETS_LOG_PREFIX"%s: "fmt"\n", __func__       \
                , ##__VA_ARGS__)
 #define iccom_socket_info(fmt, ...)                                      \
         pr_info(ICCOM_SOCKETS_LOG_PREFIX"%s: "fmt"\n", __func__          \
@@ -434,7 +434,7 @@ static int __iccom_socket_dispatch_msg_up(
 {
         if (data_size_bytes > ICCOM_SOCKET_MAX_MESSAGE_SIZE_BYTES) {
                 iccom_socket_err("received message is bigger than max"
-                                 "  allowed: %d > %d bytes; dropping;"
+                                 "  allowed: %ld > %d bytes; dropping;"
                                  , data_size_bytes
                                  , ICCOM_SOCKET_MAX_MESSAGE_SIZE_BYTES);
                 return -ENOMEM;
@@ -447,7 +447,7 @@ static int __iccom_socket_dispatch_msg_up(
 
         if (IS_ERR_OR_NULL(sk_buffer)) {
                 iccom_socket_err("could not allocate socket buffer,"
-                                 " req. size: %d"
+                                 " req. size: %ld"
                                  , NLMSG_SPACE(data_size_bytes));
                 return -EPIPE;
         }
@@ -893,7 +893,7 @@ static int __iccom_socket_protocol_device_init(
         //      transport protocol drivers, nor byte transfer protocol
         //      drivers
         const struct full_duplex_device transport
-                    = example_protocol_init_transport_layer();
+                    = iccom_example_protocol_init_transport_layer();
 
         // TODO: ultimate binding shall happen in the ultimate protocol
         //      driver and happen between specific instances of layers
-- 
2.25.1

